package com.progimage.repository.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.google.common.collect.Maps;
import org.springframework.util.StringUtils;

import java.util.Date;
import java.util.Map;
import java.util.UUID;

@DynamoDBTable(tableName = "REPLACED_BY_VALUE_IN_PROPERTIES_FILE")
public class ImageMetadata {
    private String id;
    private String name;
    private String originalFormat;
    private Map<String, String> formatsMapping = Maps.newHashMap();
    private Date createdAt;
    private Date updatedAt;

    public String resolveStorageKey(String format) {
        format = StringUtils.isEmpty(format) ? originalFormat : format;
        if(!formatsMapping.containsKey(format)) {
            formatsMapping.put(format, UUID.randomUUID().toString());
        }
        return formatsMapping.get(format);
    }

    public boolean supports(String format) {
        format = StringUtils.isEmpty(format) ? originalFormat : format;
        return formatsMapping.containsKey(format);
    }

    @DynamoDBHashKey(attributeName = "id")
    @DynamoDBAutoGeneratedKey
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @DynamoDBAttribute(attributeName = "name")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @DynamoDBAttribute(attributeName = "originalFormat")
    public String getOriginalFormat() {
        return originalFormat;
    }

    public void setOriginalFormat(String originalFormat) {
        this.originalFormat = originalFormat;
        formatsMapping.putIfAbsent(originalFormat, UUID.randomUUID().toString());
    }

    @DynamoDBAttribute(attributeName = "formatsMapping")
    public Map<String, String> getFormatsMapping() {
        return formatsMapping;
    }

    public void setFormatsMapping(Map<String, String> formatsMapping) {
        this.formatsMapping = formatsMapping;
    }

    @DynamoDBAttribute(attributeName = "createdAt")
    public Date getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @DynamoDBAttribute(attributeName = "updatedAt")
    public Date getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }
}
